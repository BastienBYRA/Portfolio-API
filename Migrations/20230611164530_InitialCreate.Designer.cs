// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio_API.Data;

#nullable disable

namespace Portfolio_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230611164530_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Portfolio_API.Models.Experiences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type_ExperienceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type_ExperienceId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("Portfolio_API.Models.Missions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExperiencesId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExperiencesId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Portfolio_API.Models.Types_Experiences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types_Experiences");
                });

            modelBuilder.Entity("Portfolio_API.Models.Experiences", b =>
                {
                    b.HasOne("Portfolio_API.Models.Types_Experiences", "Type_Experience")
                        .WithMany()
                        .HasForeignKey("Type_ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type_Experience");
                });

            modelBuilder.Entity("Portfolio_API.Models.Missions", b =>
                {
                    b.HasOne("Portfolio_API.Models.Experiences", null)
                        .WithMany("Missions")
                        .HasForeignKey("ExperiencesId");
                });

            modelBuilder.Entity("Portfolio_API.Models.Experiences", b =>
                {
                    b.Navigation("Missions");
                });
#pragma warning restore 612, 618
        }
    }
}
